<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Geolocation', 'doctrine');

/**
 * BaseGeolocation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idgeolocation
 * @property integer $fkidcountry
 * @property string $json
 * @property string $xml
 * @property float $longitude
 * @property float $lattitude
 * @property Country $Country
 * @property Doctrine_Collection $CustomersAddressList
 * @property Doctrine_Collection $Prospects
 * 
 * @method integer             getIdgeolocation()        Returns the current record's "idgeolocation" value
 * @method integer             getFkidcountry()          Returns the current record's "fkidcountry" value
 * @method string              getJson()                 Returns the current record's "json" value
 * @method string              getXml()                  Returns the current record's "xml" value
 * @method float               getLongitude()            Returns the current record's "longitude" value
 * @method float               getLattitude()            Returns the current record's "lattitude" value
 * @method Country             getCountry()              Returns the current record's "Country" value
 * @method Doctrine_Collection getCustomersAddressList() Returns the current record's "CustomersAddressList" collection
 * @method Doctrine_Collection getProspects()            Returns the current record's "Prospects" collection
 * @method Geolocation         setIdgeolocation()        Sets the current record's "idgeolocation" value
 * @method Geolocation         setFkidcountry()          Sets the current record's "fkidcountry" value
 * @method Geolocation         setJson()                 Sets the current record's "json" value
 * @method Geolocation         setXml()                  Sets the current record's "xml" value
 * @method Geolocation         setLongitude()            Sets the current record's "longitude" value
 * @method Geolocation         setLattitude()            Sets the current record's "lattitude" value
 * @method Geolocation         setCountry()              Sets the current record's "Country" value
 * @method Geolocation         setCustomersAddressList() Sets the current record's "CustomersAddressList" collection
 * @method Geolocation         setProspects()            Sets the current record's "Prospects" collection
 * 
 * @package    artworks
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGeolocation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('geolocation');
        $this->hasColumn('idgeolocation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('fkidcountry', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('json', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('xml', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('longitude', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('lattitude', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'fkidcountry',
             'foreign' => 'idcountry'));

        $this->hasMany('CustomersAddressList', array(
             'local' => 'idgeolocation',
             'foreign' => 'fkidgeolocationfromaddresslist'));

        $this->hasMany('Prospects', array(
             'local' => 'idgeolocation',
             'foreign' => 'fkidgeolocationfromprospect'));
    }
}
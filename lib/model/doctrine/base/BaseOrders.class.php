<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Orders', 'doctrine');

/**
 * BaseOrders
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idorders
 * @property integer $fkidorder_status
 * @property integer $fkidorder_type
 * @property integer $fkidbasket
 * @property timestamp $created_at
 * @property Basket $Basket
 * @property OrderStatus $OrderStatus
 * @property OrderType $OrderType
 * 
 * @method integer     getIdorders()         Returns the current record's "idorders" value
 * @method integer     getFkidorderStatus()  Returns the current record's "fkidorder_status" value
 * @method integer     getFkidorderType()    Returns the current record's "fkidorder_type" value
 * @method integer     getFkidbasket()       Returns the current record's "fkidbasket" value
 * @method timestamp   getCreatedAt()        Returns the current record's "created_at" value
 * @method Basket      getBasket()           Returns the current record's "Basket" value
 * @method OrderStatus getOrderStatus()      Returns the current record's "OrderStatus" value
 * @method OrderType   getOrderType()        Returns the current record's "OrderType" value
 * @method Orders      setIdorders()         Sets the current record's "idorders" value
 * @method Orders      setFkidorderStatus()  Sets the current record's "fkidorder_status" value
 * @method Orders      setFkidorderType()    Sets the current record's "fkidorder_type" value
 * @method Orders      setFkidbasket()       Sets the current record's "fkidbasket" value
 * @method Orders      setCreatedAt()        Sets the current record's "created_at" value
 * @method Orders      setBasket()           Sets the current record's "Basket" value
 * @method Orders      setOrderStatus()      Sets the current record's "OrderStatus" value
 * @method Orders      setOrderType()        Sets the current record's "OrderType" value
 * 
 * @package    artworks
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrders extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('orders');
        $this->hasColumn('idorders', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('fkidorder_status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fkidorder_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fkidbasket', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Basket', array(
             'local' => 'fkidbasket',
             'foreign' => 'idbasket'));

        $this->hasOne('OrderStatus', array(
             'local' => 'fkidorder_status',
             'foreign' => 'idorder_status'));

        $this->hasOne('OrderType', array(
             'local' => 'fkidorder_type',
             'foreign' => 'idorder_type'));
    }
}
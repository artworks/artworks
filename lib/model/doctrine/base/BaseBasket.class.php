<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Basket', 'doctrine');

/**
 * BaseBasket
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idbasket
 * @property integer $fkidcustomersfrombasket
 * @property integer $fkidbasket_status
 * @property integer $fkidartworksfrombasket
 * @property Customers $Customers
 * @property BasketStatus $BasketStatus
 * @property Artworks $Artworks
 * @property Doctrine_Collection $Orders
 * 
 * @method integer             getIdbasket()                Returns the current record's "idbasket" value
 * @method integer             getFkidcustomersfrombasket() Returns the current record's "fkidcustomersfrombasket" value
 * @method integer             getFkidbasketStatus()        Returns the current record's "fkidbasket_status" value
 * @method integer             getFkidartworksfrombasket()  Returns the current record's "fkidartworksfrombasket" value
 * @method Customers           getCustomers()               Returns the current record's "Customers" value
 * @method BasketStatus        getBasketStatus()            Returns the current record's "BasketStatus" value
 * @method Artworks            getArtworks()                Returns the current record's "Artworks" value
 * @method Doctrine_Collection getOrders()                  Returns the current record's "Orders" collection
 * @method Basket              setIdbasket()                Sets the current record's "idbasket" value
 * @method Basket              setFkidcustomersfrombasket() Sets the current record's "fkidcustomersfrombasket" value
 * @method Basket              setFkidbasketStatus()        Sets the current record's "fkidbasket_status" value
 * @method Basket              setFkidartworksfrombasket()  Sets the current record's "fkidartworksfrombasket" value
 * @method Basket              setCustomers()               Sets the current record's "Customers" value
 * @method Basket              setBasketStatus()            Sets the current record's "BasketStatus" value
 * @method Basket              setArtworks()                Sets the current record's "Artworks" value
 * @method Basket              setOrders()                  Sets the current record's "Orders" collection
 * 
 * @package    artworks
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBasket extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('basket');
        $this->hasColumn('idbasket', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('fkidcustomersfrombasket', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fkidbasket_status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fkidartworksfrombasket', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Customers', array(
             'local' => 'fkidcustomersfrombasket',
             'foreign' => 'idcustomers'));

        $this->hasOne('BasketStatus', array(
             'local' => 'fkidbasket_status',
             'foreign' => 'idbasket_status'));

        $this->hasOne('Artworks', array(
             'local' => 'fkidartworksfrombasket',
             'foreign' => 'idartworks'));

        $this->hasMany('Orders', array(
             'local' => 'idbasket',
             'foreign' => 'fkidbasket'));
    }
}